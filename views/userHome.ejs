<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <!-- <meta name="viewport" content="width=device-width, initial-scale=1.0"> -->
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
  <title>USER Home</title>


  <script src="https://cdn.jsdelivr.net/npm/vue@2.6.12"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js" integrity="sha512-bZS47S7sPOxkjU/4Bt0zrhEtWx0y0CRkhEp8IckzK+ltifIIE9EMIMTuT/mEzoIMewUINruDBIR/jJnbguonqQ==" crossorigin="anonymous"></script>
  <script src="https://unpkg.com/vue-cookies@1.8.2/vue-cookies.js"></script>
  <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap" rel="stylesheet">
  <style></style>
</head>
<body>

  <!-- VUE APP CONTENT GOES HERE -->
  <div id="home-app">
    <div id="navbar-app" class="nav-bar">

      <div class="left">
        <!-- <button>Home</button> -->
        <button v-if="user" class="userName">Logged in as: {{user}}</button>
        <a v-if=" !user " href="/users/login"><button>User Login</button></a>
        <a v-if="!user" href="/users/createUser"><button >Create User</button></a>
        <button v-if="user" @click="getUserTrackers()">{{ (showUserTrackedGames) ? 'Hide Tracked Games' : 'Show Tracked Games' }}</button>
        
      </div>
    
      <div class="right">
        <button @click="logout()">Log Out</button>
    
      </div>
      
    </div>


    <!-- USER TRACKED GAMES WINDOW -->
    <div 
      v-if="showUserTrackedGames" 
      class="user-tracked-games"
    >
      YOUR TRACKED GAMES
      <div v-for="tracker of userTrackedGames" class="basic-outline">
        <button>{{tracker.gameName}}</button>
        <button @click="untrackGame(tracker._id)">Untrack Game</button>
        <button @click="showHideTrackedTickets(tracker._id)">Tracked Tickets</button>
        <div>{{tracker.location}} - # tickets: {{tracker.numTickets}} - ${{tracker.price}}</div>
        <div v-if="showTrackedTickets && trackedTicketsTrackerId === tracker._id.toString()">
          <div v-for="ticket of trackedTickets">
            Section: {{ticket.d}} | Row: {{ticket.r}} | Qty: {{ticket.q}} | Price: ${{ticket.p}}
          </div>
        </div>
      </div>

    </div>

    <div>
      <button 
        id="main-btn"
        @click="showHideGames()"
        v-if="user"
      >
        Show Pens Games
      </button>
    </div>


    <div v-if="showGameTracker" class="game-tracker" >
      TRACK GAME HERE
      <br>
      {{ selectedGame.name }} <br>
      {{ new Date(selectedGame.utcDate).toLocaleString() }} <br>
      Ticket Qty: <input v-model="ticketQty" type="number"> <br>
      Max Price per: <input v-model="maxTicketPrice" type="number"> <br>
      <label for="">Select what section</label>
      <select name="section" id="" @change="setSelection($event)">
        <option value="All">All</option>
        <option value="Lower Bowl">Lower Bowl</option>
        <option value="Upper Bowl">Upper Bowl</option>
      </select> <br>

      <button @click="trackGame()">
        Track Game
      </button>
      <button @click="closeGameWindow()">
        Close
      </button>
    </div>



    <div v-if="showGames && user" class="games" id="main" >
      2022-2023 Pens Games

      <button 
        class="column"
        v-for="game in games" 
        :id="game.id" 
        @click="selectGame(game.id)"
        :class="{ selectedGame : selectedGame.id === game.id}"
      >
        {{ game.name }} - {{ new Date(game.utcDate).toLocaleString() }}
      </button>

    </div>

  </div>






  <script>
    /////////////
    // GLOBALS //
    /////////////


    ///////////////
    /// VUE APP ///
    ///////////////

    const APP = new Vue({
      el: '#home-app',

      data: {
        test: 'a test variable',

        showGames: false,
        showGameTracker: false,
        selectedGame: {},
        ticketQty: 2,
        maxTicketPrice: null,

        user: '',
        userEmail: '',

        games: [],

        userTrackedGames: [],
        showUserTrackedGames: false,
        showTrackedTickets: false,
        trackedTickets: [],


      },

      methods: {

        showHideGames() {
          this.showGames = !this.showGames;
          // console.log(this.showGames);
        },

        showHideTrackedTickets(trackerId) {
          this.showTrackedTickets = !this.showTrackedTickets;
          if (this.showTrackedTickets === true) {
            const tracker = this.userTrackedGames.find( x => x._id === trackerId);
            this.trackedTickets = Object.values(tracker.foundTickets)
          }
          this.trackedTicketsTrackerId = trackerId;
          console.log(trackerId)
          this.$forceUpdate();
          
        },

        getPensGames() {
          axios.get('/games/')
            .then( res => {
              // console.log(res.data)
              this.games = res.data.games;
            })
        },

        selectGame(gameId) {

          // close and unselect window
          if ( this.selectedGame.id === gameId ) {
            this.selectedGame = {};
            this.showGameTracker = false;
            return;
          }

          this.selectedGame = this.games.find( x => x.id === gameId );
          this.selectedGame.selection = 'All';
          if ( !this.showGameTracker ) this.showGameTracker = true;
        },

        closeGameWindow() {
          this.showGameTracker = !this.showGameTracker;
          this.selectedGame = {};
        },

        getUser() {
          const userName = this.$cookies.get('ticketUserName');
          // console.log(userName)
          this.user = userName;
          // console.log('------------------  ---------------');
          if ( !userName ) return;

          axios.post('/users/getUser', {user: userName})
          .then( res => {
            // console.log(res.data)
            const { email } = res.data;
            this.userEmail = email;
          })
        },

        trackGame() {
          const { id, selection, name, utcDate } = this.selectedGame;
          const tracker = {
            price: this.maxTicketPrice,
            numTickets: this.ticketQty,
            gameName: name,
            gameId: id,
            location: selection,
            utcDate,
            userName: this.user,
            userEmail: this.userEmail,
          };

          console.log(tracker);
          axios.post('/trackers/', tracker )
            .then( res => {
              // console.log(res.data)
              this.showGameTracker = false;
              this.selectedGame = '';
              this.getUserTrackers();
            })

          // TODO: set up router in BE for creating a new tracker
          // TODO: clean up variables to make sure they match for readability

        },

        setSelection(event) {
          this.selectedGame.selection  = event.target.value;
        },

        logout() {
          //ticketUserName
          document.cookie = "ticketUserName=''; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
          document.cookie = "ticketAppCook=''; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
          this.user = '';
          // console.log(document.cookie)
        },

        getUserTrackers() {
          const user = this.user;

          if ( this.showUserTrackedGames === true ) {
            this.showUserTrackedGames = false;
          }
          else {
            const data = {user};
            axios.post('/trackers/getUserTrackers/', data)
            .then( res => {
              this.userTrackedGames = res.data
              this.showUserTrackedGames = true;
            } );
          }
        },

        untrackGame(trackerId) {
          axios.delete(`/trackers/delete/${trackerId}`)
          .then( res => {
            const idx = this.userTrackedGames.findIndex( t => t._id === trackerId );
            this.userTrackedGames.splice(idx, 1);
            this.$forceUpdate();
          })
        }


      },

      mounted() {
        console.log('Vue app mounted')
        this.getPensGames();
        this.getUser();
      }

    })


  </script>


  <!-- CSS -->
  <style>
    html, button, input, select, .basic-outline button {
      font-family: 'Open Sans', sans-serif;
    }

    .game-tracker {
      border: .1rem black solid;
      margin: .2rem;
      padding: .2rem;
    }

    .games {
      border: .1rem black solid;
      margin: .2rem;
      padding: .2rem;
    }

    .column {
      display: flex;
    }

    .selectedGame {
      background-color: gold;
    }

    .user-tracked-games {
      border: .1rem black solid;
      border-radius: 10px;
      margin: .2rem;
      padding: .2rem;
    }

    .basic-outline {
      border: .1rem black solid;
      /* border-radius: 10px; */
      margin: .2rem;
      padding: .2rem;
      background-color: rgb(235, 241, 244);
    }

    #main button, #main-btn, .basic-outline button {

    padding: .25rem 1rem .25rem 1rem ;
    border-radius: 5px;
    /* padding: .25rem; */
    margin-top: .25rem;
    margin-bottom: .25rem;
    }


    /* NAV BAR */
    /* ----------- */
    .nav-bar{
      background-color: beige;
      padding: 1rem;
      border: 2px solid black;
      border-radius: 10px;
      display: flex;
    }

    .right {
      /* float: right; */
      margin-left: auto;
    }

    .nav-bar button {

      padding: .25rem 1rem .25rem 1rem ;
      border-radius: 10px;
    }

    .userName {
      border:none;
      background-color: inherit;
    }

  </style>
  
</body>
</html>